package ganttproject;

import org.junit.Test;

import common.Utilities;
import gov.nasa.jpf.util.test.TestJPF;

public class DependencyGraph_rollbackTransaction1 extends TestJPF {

	@Test
	public void test_rollbackTransaction1() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_3 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_7 = new ganttproject.Transaction();
		ganttproject.GraphData backup_6 = new ganttproject.GraphData();
		ganttproject.Transaction trans_10 = new ganttproject.Transaction();
		ganttproject.GraphData backup_9 = new ganttproject.GraphData();
		ganttproject.Transaction trans_13 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_4 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_272 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_283 = new ganttproject.Node();
		ganttproject.NodeData myData1_281 = new ganttproject.NodeData();
		ganttproject.GraphData backup_12 = null;
		ganttproject.GraphData this_myData_15 = backup_9;
		ganttproject.LinkedListNode.EntryNode prev_271 = next_272;
		ganttproject.LinkedListNode.EntryNode header_274 = header_4;
		boolean isRunning_2 = true;
		boolean isRunning_14 = true;
		boolean isRunning_11 = true;
		int size_219 = 1;
		int i_1 = 0;
		int size_5 = 1;
		boolean isRunning_8 = true;
		ganttproject.Node ele_273 = null;
		ganttproject.NodeData myBackup_275 = null;
		obj.myTxn.isRunning = isRunning_2;
		obj.myTxn.myTouchedNodes = myTouchedNodes_3;
		myTouchedNodes_3.header = header_4;
		myTouchedNodes_3.size = size_5;
		obj.myData.myBackup = backup_6;
		obj.myData.myTxn = trans_7;
		trans_7.isRunning = isRunning_8;
		backup_6.myBackup = backup_9;
		backup_6.myTxn = trans_10;
		trans_10.isRunning = isRunning_11;
		backup_9.myBackup = backup_12;
		backup_9.myTxn = trans_13;
		trans_13.isRunning = isRunning_14;
		header_4.element = ele_273;
		header_4.next = next_272;
		header_4.previous = prev_271;
		next_272.element = ele_283;
		next_272.next = header_4;
		next_272.previous = header_274;
		ele_283.myData = myData1_281;
		myData1_281.myBackup = myBackup_275;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction2() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_19 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_23 = new ganttproject.Node();
		ganttproject.NodeData myData1_24 = new ganttproject.NodeData();
		ganttproject.LinkedListNode.EntryNode next_26 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_320 = new ganttproject.Node();
		ganttproject.NodeData myData1_318 = new ganttproject.NodeData();
		ganttproject.GraphData backup_14 = null;
		ganttproject.GraphData this_myData_30 = obj.myData;
		ganttproject.LinkedListNode.EntryNode e_4 = header_12;
		ganttproject.LinkedListNode.EntryNode e_6 = next_19;
		ganttproject.Node node_8 = ele_23;
		ganttproject.LinkedListNode.EntryNode header_221 = header_12;
		ganttproject.LinkedListNode.EntryNode next_222 = next_19;
		ganttproject.LinkedListNode.EntryNode header_223 = header_12;
		ganttproject.LinkedListNode.EntryNode prev_224 = next_26;
		boolean isRunning_16 = true;
		int i_1 = 0;
		int i_9 = 1;
		int i_5 = 0;
		int index_3 = 0;
		boolean isRunning_10 = true;
		int size_13 = 2;
		int i_7 = 1;
		int index_2 = 0;
		ganttproject.LinkedListNode.EntryNode prev_20 = prev_224;
		ganttproject.NodeData myBackup_25 = new ganttproject.NodeData();
		ganttproject.NodeData myData1_31 = myBackup_25;
		ganttproject.NodeData myBackup_312 = null;
		ganttproject.Node ele_18 = null;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		header_12.element = ele_18;
		header_12.next = next_19;
		header_12.previous = prev_20;
		next_19.element = ele_23;
		next_19.next = next_26;
		next_19.previous = header_221;
		ele_23.myData = myData1_24;
		myData1_24.myBackup = myBackup_25;
		next_26.element = ele_320;
		next_26.next = header_223;
		next_26.previous = next_222;
		ele_320.myData = myData1_318;
		myData1_318.myBackup = myBackup_312;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction3() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_3 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_7 = new ganttproject.Transaction();
		ganttproject.GraphData backup_6 = new ganttproject.GraphData();
		ganttproject.Transaction trans_10 = new ganttproject.Transaction();
		ganttproject.GraphData backup_9 = new ganttproject.GraphData();
		ganttproject.Transaction trans_13 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_4 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_269 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_280 = new ganttproject.Node();
		ganttproject.NodeData myData1_278 = new ganttproject.NodeData();
		ganttproject.GraphData backup_12 = null;
		ganttproject.GraphData this_myData_15 = backup_9;
		ganttproject.LinkedListNode.EntryNode prev_268 = next_269;
		ganttproject.LinkedListNode.EntryNode header_271 = header_4;
		boolean isRunning_2 = true;
		boolean isRunning_14 = false;
		boolean isRunning_11 = true;
		int size_219 = 1;
		int i_1 = 0;
		int size_5 = 1;
		boolean isRunning_8 = true;
		ganttproject.Node ele_270 = null;
		ganttproject.NodeData myBackup_272 = null;
		obj.myTxn.isRunning = isRunning_2;
		obj.myTxn.myTouchedNodes = myTouchedNodes_3;
		myTouchedNodes_3.header = header_4;
		myTouchedNodes_3.size = size_5;
		obj.myData.myBackup = backup_6;
		obj.myData.myTxn = trans_7;
		trans_7.isRunning = isRunning_8;
		backup_6.myBackup = backup_9;
		backup_6.myTxn = trans_10;
		trans_10.isRunning = isRunning_11;
		backup_9.myBackup = backup_12;
		backup_9.myTxn = trans_13;
		trans_13.isRunning = isRunning_14;
		header_4.element = ele_270;
		header_4.next = next_269;
		header_4.previous = prev_268;
		next_269.element = ele_280;
		next_269.next = header_4;
		next_269.previous = header_271;
		ele_280.myData = myData1_278;
		myData1_278.myBackup = myBackup_272;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction4() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_21 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_25 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_22 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_29 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_33 = new ganttproject.Node();
		ganttproject.NodeData myData1_34 = new ganttproject.NodeData();
		ganttproject.GraphData backup_24 = null;
		ganttproject.LinkedListNode.EntryNode prev_30 = next_29;
		ganttproject.GraphData this_myData_38 = obj.myData;
		ganttproject.LinkedListNode.EntryNode e_4 = header_22;
		ganttproject.LinkedListNode.EntryNode e_6 = next_29;
		ganttproject.Node node_8 = ele_33;
		ganttproject.LinkedListNode.EntryNode header_221 = header_22;
		ganttproject.LinkedListNode.EntryNode header_222 = header_22;
		int index_3 = 0;
		boolean isRunning_26 = true;
		int size_23 = 1;
		int i_7 = 1;
		int i_1 = 0;
		int i_5 = 0;
		int index_2 = 0;
		boolean isRunning_20 = true;
		ganttproject.NodeData myBackup_35 = new ganttproject.NodeData();
		ganttproject.Node ele_28 = null;
		obj.myTxn.isRunning = isRunning_20;
		obj.myTxn.myTouchedNodes = myTouchedNodes_21;
		myTouchedNodes_21.header = header_22;
		myTouchedNodes_21.size = size_23;
		obj.myData.myBackup = backup_24;
		obj.myData.myTxn = trans_25;
		trans_25.isRunning = isRunning_26;
		header_22.element = ele_28;
		header_22.next = next_29;
		header_22.previous = prev_30;
		next_29.element = ele_33;
		next_29.next = header_221;
		next_29.previous = header_222;
		ele_33.myData = myData1_34;
		myData1_34.myBackup = myBackup_35;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction5() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_21 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_25 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_22 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_29 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_33 = new ganttproject.Node();
		ganttproject.NodeData myData1_34 = new ganttproject.NodeData();
		ganttproject.GraphData backup_24 = null;
		ganttproject.LinkedListNode.EntryNode prev_30 = next_29;
		ganttproject.GraphData this_myData_38 = obj.myData;
		ganttproject.LinkedListNode.EntryNode e_4 = header_22;
		ganttproject.LinkedListNode.EntryNode e_6 = next_29;
		ganttproject.Node node_8 = ele_33;
		ganttproject.LinkedListNode.EntryNode header_221 = header_22;
		ganttproject.LinkedListNode.EntryNode header_222 = header_22;
		int index_3 = 0;
		boolean isRunning_26 = false;
		int size_23 = 1;
		int i_7 = 1;
		int i_1 = 0;
		int i_5 = 0;
		int index_2 = 0;
		boolean isRunning_20 = true;
		ganttproject.NodeData myBackup_35 = new ganttproject.NodeData();
		ganttproject.Node ele_28 = null;
		obj.myTxn.isRunning = isRunning_20;
		obj.myTxn.myTouchedNodes = myTouchedNodes_21;
		myTouchedNodes_21.header = header_22;
		myTouchedNodes_21.size = size_23;
		obj.myData.myBackup = backup_24;
		obj.myData.myTxn = trans_25;
		trans_25.isRunning = isRunning_26;
		header_22.element = ele_28;
		header_22.next = next_29;
		header_22.previous = prev_30;
		next_29.element = ele_33;
		next_29.next = header_221;
		next_29.previous = header_222;
		ele_33.myData = myData1_34;
		myData1_34.myBackup = myBackup_35;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction6() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_2 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_228 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_3 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_229 = null;
		int size_213 = 0;
		int size_4 = 0;
		boolean isRunning_1 = true;
		boolean isRunning_227 = false;
		ganttproject.Node ele_236 = null;
		obj.myTxn.isRunning = isRunning_1;
		obj.myTxn.myTouchedNodes = myTouchedNodes_2;
		myTouchedNodes_2.header = header_3;
		myTouchedNodes_2.size = size_4;
		obj.myData.myBackup = backup_229;
		obj.myData.myTxn = trans_228;
		trans_228.isRunning = isRunning_227;
		header_3.element = ele_236;
		header_3.next = header_3;
		header_3.previous = header_3;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction7() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.GraphData backup_14 = new ganttproject.GraphData();
		ganttproject.Transaction trans_18 = new ganttproject.Transaction();
		ganttproject.GraphData backup_17 = new ganttproject.GraphData();
		ganttproject.Transaction trans_21 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_20 = null;
		int size_219 = 0;
		boolean isRunning_16 = true;
		boolean isRunning_22 = true;
		boolean isRunning_10 = true;
		int size_13 = 0;
		boolean isRunning_19 = true;
		ganttproject.Node ele_262 = null;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		backup_14.myBackup = backup_17;
		backup_14.myTxn = trans_18;
		trans_18.isRunning = isRunning_19;
		backup_17.myBackup = backup_20;
		backup_17.myTxn = trans_21;
		trans_21.isRunning = isRunning_22;
		header_12.element = ele_262;
		header_12.next = header_12;
		header_12.previous = header_12;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction8() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.GraphData backup_14 = new ganttproject.GraphData();
		ganttproject.Transaction trans_18 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_17 = null;
		boolean isRunning_16 = true;
		int size_217 = 0;
		boolean isRunning_10 = true;
		int size_13 = 0;
		boolean isRunning_19 = true;
		ganttproject.Node ele_250 = null;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		backup_14.myBackup = backup_17;
		backup_14.myTxn = trans_18;
		trans_18.isRunning = isRunning_19;
		header_12.element = ele_250;
		header_12.next = header_12;
		header_12.previous = header_12;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction9() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_2 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_226 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_3 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_227 = null;
		int size_213 = 0;
		int size_4 = 0;
		ganttproject.Node ele_234 = null;
		boolean isRunning_225 = false;
		boolean isRunning_1 = false;
		obj.myTxn.isRunning = isRunning_1;
		obj.myTxn.myTouchedNodes = myTouchedNodes_2;
		myTouchedNodes_2.header = header_3;
		myTouchedNodes_2.size = size_4;
		obj.myData.myBackup = backup_227;
		obj.myData.myTxn = trans_226;
		trans_226.isRunning = isRunning_225;
		header_3.element = ele_234;
		header_3.next = header_3;
		header_3.previous = header_3;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction10() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_21 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_25 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_22 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_24 = null;
		int size_23 = 0;
		boolean isRunning_26 = true;
		int size_215 = 0;
		boolean isRunning_20 = true;
		ganttproject.Node ele_238 = null;
		obj.myTxn.isRunning = isRunning_20;
		obj.myTxn.myTouchedNodes = myTouchedNodes_21;
		myTouchedNodes_21.header = header_22;
		myTouchedNodes_21.size = size_23;
		obj.myData.myBackup = backup_24;
		obj.myData.myTxn = trans_25;
		trans_25.isRunning = isRunning_26;
		header_22.element = ele_238;
		header_22.next = header_22;
		header_22.previous = header_22;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction11() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_3 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_7 = new ganttproject.Transaction();
		ganttproject.GraphData backup_6 = new ganttproject.GraphData();
		ganttproject.Transaction trans_10 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_4 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_257 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_268 = new ganttproject.Node();
		ganttproject.NodeData myData1_266 = new ganttproject.NodeData();
		ganttproject.GraphData backup_9 = null;
		ganttproject.GraphData this_myData_12 = backup_6;
		ganttproject.LinkedListNode.EntryNode prev_256 = next_257;
		ganttproject.LinkedListNode.EntryNode header_259 = header_4;
		int i_1 = 0;
		boolean isRunning_2 = true;
		int size_5 = 1;
		boolean isRunning_8 = true;
		boolean isRunning_11 = false;
		int size_217 = 1;
		ganttproject.NodeData myBackup_260 = null;
		ganttproject.Node ele_258 = null;
		obj.myTxn.isRunning = isRunning_2;
		obj.myTxn.myTouchedNodes = myTouchedNodes_3;
		myTouchedNodes_3.header = header_4;
		myTouchedNodes_3.size = size_5;
		obj.myData.myBackup = backup_6;
		obj.myData.myTxn = trans_7;
		trans_7.isRunning = isRunning_8;
		backup_6.myBackup = backup_9;
		backup_6.myTxn = trans_10;
		trans_10.isRunning = isRunning_11;
		header_4.element = ele_258;
		header_4.next = next_257;
		header_4.previous = prev_256;
		next_257.element = ele_268;
		next_257.next = header_4;
		next_257.previous = header_259;
		ele_268.myData = myData1_266;
		myData1_266.myBackup = myBackup_260;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction12() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.GraphData backup_14 = new ganttproject.GraphData();
		ganttproject.Transaction trans_18 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_17 = new ganttproject.GraphData();
		ganttproject.Transaction trans_256 = new ganttproject.Transaction();
		ganttproject.GraphData backup_257 = null;
		boolean isRunning_16 = true;
		boolean isRunning_10 = true;
		int size_217 = 0;
		int size_13 = 0;
		boolean isRunning_19 = true;
		boolean isRunning_255 = false;
		ganttproject.Node ele_250 = null;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		backup_14.myBackup = backup_17;
		backup_14.myTxn = trans_18;
		trans_18.isRunning = isRunning_19;
		header_12.element = ele_250;
		header_12.next = header_12;
		header_12.previous = header_12;
		backup_17.myBackup = backup_257;
		backup_17.myTxn = trans_256;
		trans_256.isRunning = isRunning_255;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction13() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_21 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_25 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_22 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_24 = new ganttproject.GraphData();
		ganttproject.Transaction trans_244 = new ganttproject.Transaction();
		ganttproject.GraphData backup_245 = null;
		int size_23 = 0;
		boolean isRunning_26 = true;
		int size_215 = 0;
		boolean isRunning_20 = true;
		boolean isRunning_243 = false;
		ganttproject.Node ele_238 = null;
		obj.myTxn.isRunning = isRunning_20;
		obj.myTxn.myTouchedNodes = myTouchedNodes_21;
		myTouchedNodes_21.header = header_22;
		myTouchedNodes_21.size = size_23;
		obj.myData.myBackup = backup_24;
		obj.myData.myTxn = trans_25;
		trans_25.isRunning = isRunning_26;
		header_22.element = ele_238;
		header_22.next = header_22;
		header_22.previous = header_22;
		backup_24.myBackup = backup_245;
		backup_24.myTxn = trans_244;
		trans_244.isRunning = isRunning_243;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction14() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_19 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_23 = new ganttproject.Node();
		ganttproject.NodeData myData1_24 = new ganttproject.NodeData();
		ganttproject.LinkedListNode.EntryNode next_26 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_317 = new ganttproject.Node();
		ganttproject.NodeData myData1_315 = new ganttproject.NodeData();
		ganttproject.GraphData backup_14 = null;
		ganttproject.GraphData this_myData_30 = obj.myData;
		ganttproject.LinkedListNode.EntryNode e_4 = header_12;
		ganttproject.LinkedListNode.EntryNode e_6 = next_19;
		ganttproject.Node node_8 = ele_23;
		ganttproject.LinkedListNode.EntryNode header_221 = header_12;
		ganttproject.LinkedListNode.EntryNode next_222 = next_19;
		ganttproject.LinkedListNode.EntryNode header_223 = header_12;
		ganttproject.LinkedListNode.EntryNode prev_224 = next_26;
		boolean isRunning_16 = false;
		int i_1 = 0;
		int i_9 = 1;
		int i_5 = 0;
		int index_3 = 0;
		boolean isRunning_10 = true;
		int size_13 = 2;
		int i_7 = 1;
		int index_2 = 0;
		ganttproject.LinkedListNode.EntryNode prev_20 = prev_224;
		ganttproject.NodeData myBackup_25 = new ganttproject.NodeData();
		ganttproject.NodeData myData1_31 = myBackup_25;
		ganttproject.Node ele_18 = null;
		ganttproject.NodeData myBackup_309 = null;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		header_12.element = ele_18;
		header_12.next = next_19;
		header_12.previous = prev_20;
		next_19.element = ele_23;
		next_19.next = next_26;
		next_19.previous = header_221;
		ele_23.myData = myData1_24;
		myData1_24.myBackup = myBackup_25;
		next_26.element = ele_317;
		next_26.next = header_223;
		next_26.previous = next_222;
		ele_317.myData = myData1_315;
		myData1_315.myBackup = myBackup_309;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction15() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.GraphData backup_14 = new ganttproject.GraphData();
		ganttproject.Transaction trans_18 = new ganttproject.Transaction();
		ganttproject.GraphData backup_17 = new ganttproject.GraphData();
		ganttproject.Transaction trans_21 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.GraphData backup_20 = new ganttproject.GraphData();
		ganttproject.Transaction trans_268 = new ganttproject.Transaction();
		ganttproject.GraphData backup_269 = null;
		int size_219 = 0;
		boolean isRunning_16 = true;
		boolean isRunning_22 = true;
		boolean isRunning_10 = true;
		int size_13 = 0;
		boolean isRunning_19 = true;
		ganttproject.Node ele_262 = null;
		boolean isRunning_267 = false;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		backup_14.myBackup = backup_17;
		backup_14.myTxn = trans_18;
		trans_18.isRunning = isRunning_19;
		backup_17.myBackup = backup_20;
		backup_17.myTxn = trans_21;
		trans_21.isRunning = isRunning_22;
		header_12.element = ele_262;
		header_12.next = header_12;
		header_12.previous = header_12;
		backup_20.myBackup = backup_269;
		backup_20.myTxn = trans_268;
		trans_268.isRunning = isRunning_267;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction16() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_3 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_7 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_4 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_248 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_259 = new ganttproject.Node();
		ganttproject.NodeData myData1_257 = new ganttproject.NodeData();
		ganttproject.GraphData backup_6 = null;
		ganttproject.GraphData this_myData_9 = obj.myData;
		ganttproject.LinkedListNode.EntryNode prev_247 = next_248;
		ganttproject.LinkedListNode.EntryNode header_250 = header_4;
		int i_1 = 0;
		boolean isRunning_2 = true;
		int size_5 = 1;
		int size_215 = 1;
		boolean isRunning_8 = true;
		ganttproject.Node ele_249 = null;
		ganttproject.NodeData myBackup_251 = null;
		obj.myTxn.isRunning = isRunning_2;
		obj.myTxn.myTouchedNodes = myTouchedNodes_3;
		myTouchedNodes_3.header = header_4;
		myTouchedNodes_3.size = size_5;
		obj.myData.myBackup = backup_6;
		obj.myData.myTxn = trans_7;
		trans_7.isRunning = isRunning_8;
		header_4.element = ele_249;
		header_4.next = next_248;
		header_4.previous = prev_247;
		next_248.element = ele_259;
		next_248.next = header_4;
		next_248.previous = header_250;
		ele_259.myData = myData1_257;
		myData1_257.myBackup = myBackup_251;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction17() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_19 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_23 = new ganttproject.Node();
		ganttproject.NodeData myData1_24 = new ganttproject.NodeData();
		ganttproject.LinkedListNode.EntryNode next_26 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_320 = new ganttproject.Node();
		ganttproject.NodeData myData1_318 = new ganttproject.NodeData();
		ganttproject.GraphData backup_14 = null;
		ganttproject.GraphData this_myData_30 = obj.myData;
		ganttproject.LinkedListNode.EntryNode e_4 = header_12;
		ganttproject.LinkedListNode.EntryNode e_6 = next_19;
		ganttproject.Node node_8 = ele_23;
		ganttproject.NodeData myBackup_25 = null;
		ganttproject.NodeData myData1_31 = myData1_24;
		ganttproject.LinkedListNode.EntryNode header_221 = header_12;
		ganttproject.LinkedListNode.EntryNode next_222 = next_19;
		ganttproject.LinkedListNode.EntryNode header_223 = header_12;
		ganttproject.LinkedListNode.EntryNode prev_224 = next_26;
		boolean isRunning_16 = true;
		int i_1 = 0;
		int i_9 = 1;
		int i_5 = 0;
		int index_3 = 0;
		boolean isRunning_10 = true;
		int size_13 = 2;
		int i_7 = 1;
		int index_2 = 0;
		ganttproject.LinkedListNode.EntryNode prev_20 = prev_224;
		ganttproject.NodeData myBackup_312 = null;
		ganttproject.Node ele_18 = null;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		header_12.element = ele_18;
		header_12.next = next_19;
		header_12.previous = prev_20;
		next_19.element = ele_23;
		next_19.next = next_26;
		next_19.previous = header_221;
		ele_23.myData = myData1_24;
		myData1_24.myBackup = myBackup_25;
		next_26.element = ele_320;
		next_26.next = header_223;
		next_26.previous = next_222;
		ele_320.myData = myData1_318;
		myData1_318.myBackup = myBackup_312;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction18() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_11 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_15 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_12 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_19 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_23 = new ganttproject.Node();
		ganttproject.NodeData myData1_24 = new ganttproject.NodeData();
		ganttproject.LinkedListNode.EntryNode next_26 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_317 = new ganttproject.Node();
		ganttproject.NodeData myData1_315 = new ganttproject.NodeData();
		ganttproject.GraphData backup_14 = null;
		ganttproject.GraphData this_myData_30 = obj.myData;
		ganttproject.LinkedListNode.EntryNode e_4 = header_12;
		ganttproject.LinkedListNode.EntryNode e_6 = next_19;
		ganttproject.Node node_8 = ele_23;
		ganttproject.NodeData myBackup_25 = null;
		ganttproject.NodeData myData1_31 = myData1_24;
		ganttproject.LinkedListNode.EntryNode header_221 = header_12;
		ganttproject.LinkedListNode.EntryNode next_222 = next_19;
		ganttproject.LinkedListNode.EntryNode header_223 = header_12;
		ganttproject.LinkedListNode.EntryNode prev_224 = next_26;
		boolean isRunning_16 = false;
		int i_1 = 0;
		int i_9 = 1;
		int i_5 = 0;
		int index_3 = 0;
		boolean isRunning_10 = true;
		int size_13 = 2;
		int i_7 = 1;
		int index_2 = 0;
		ganttproject.LinkedListNode.EntryNode prev_20 = prev_224;
		ganttproject.Node ele_18 = null;
		ganttproject.NodeData myBackup_309 = null;
		obj.myTxn.isRunning = isRunning_10;
		obj.myTxn.myTouchedNodes = myTouchedNodes_11;
		myTouchedNodes_11.header = header_12;
		myTouchedNodes_11.size = size_13;
		obj.myData.myBackup = backup_14;
		obj.myData.myTxn = trans_15;
		trans_15.isRunning = isRunning_16;
		header_12.element = ele_18;
		header_12.next = next_19;
		header_12.previous = prev_20;
		next_19.element = ele_23;
		next_19.next = next_26;
		next_19.previous = header_221;
		ele_23.myData = myData1_24;
		myData1_24.myBackup = myBackup_25;
		next_26.element = ele_317;
		next_26.next = header_223;
		next_26.previous = next_222;
		ele_317.myData = myData1_315;
		myData1_315.myBackup = myBackup_309;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction19() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_3 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_7 = new ganttproject.Transaction();
		ganttproject.GraphData backup_6 = new ganttproject.GraphData();
		ganttproject.Transaction trans_10 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_4 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_260 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_271 = new ganttproject.Node();
		ganttproject.NodeData myData1_269 = new ganttproject.NodeData();
		ganttproject.GraphData backup_9 = null;
		ganttproject.GraphData this_myData_12 = backup_6;
		ganttproject.LinkedListNode.EntryNode prev_259 = next_260;
		ganttproject.LinkedListNode.EntryNode header_262 = header_4;
		int i_1 = 0;
		boolean isRunning_2 = true;
		int size_5 = 1;
		boolean isRunning_8 = true;
		int size_217 = 1;
		boolean isRunning_11 = true;
		ganttproject.Node ele_261 = null;
		ganttproject.NodeData myBackup_263 = null;
		obj.myTxn.isRunning = isRunning_2;
		obj.myTxn.myTouchedNodes = myTouchedNodes_3;
		myTouchedNodes_3.header = header_4;
		myTouchedNodes_3.size = size_5;
		obj.myData.myBackup = backup_6;
		obj.myData.myTxn = trans_7;
		trans_7.isRunning = isRunning_8;
		backup_6.myBackup = backup_9;
		backup_6.myTxn = trans_10;
		trans_10.isRunning = isRunning_11;
		header_4.element = ele_261;
		header_4.next = next_260;
		header_4.previous = prev_259;
		next_260.element = ele_271;
		next_260.next = header_4;
		next_260.previous = header_262;
		ele_271.myData = myData1_269;
		myData1_269.myBackup = myBackup_263;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

	@Test
	public void test_rollbackTransaction20() throws Exception {
		DependencyGraph obj = new DependencyGraph();
		obj.myTxn = new ganttproject.Transaction();
		ganttproject.LinkedListNode myTouchedNodes_3 = new ganttproject.LinkedListNode();
		obj.myData = new ganttproject.GraphData();
		ganttproject.Transaction trans_7 = new ganttproject.Transaction();
		ganttproject.LinkedListNode.EntryNode header_4 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.LinkedListNode.EntryNode next_245 = new ganttproject.LinkedListNode.EntryNode();
		ganttproject.Node ele_256 = new ganttproject.Node();
		ganttproject.NodeData myData1_254 = new ganttproject.NodeData();
		ganttproject.GraphData backup_6 = null;
		ganttproject.GraphData this_myData_9 = obj.myData;
		ganttproject.LinkedListNode.EntryNode prev_244 = next_245;
		ganttproject.LinkedListNode.EntryNode header_247 = header_4;
		int i_1 = 0;
		boolean isRunning_2 = true;
		int size_5 = 1;
		boolean isRunning_8 = false;
		int size_215 = 1;
		ganttproject.Node ele_246 = null;
		ganttproject.NodeData myBackup_248 = null;
		obj.myTxn.isRunning = isRunning_2;
		obj.myTxn.myTouchedNodes = myTouchedNodes_3;
		myTouchedNodes_3.header = header_4;
		myTouchedNodes_3.size = size_5;
		obj.myData.myBackup = backup_6;
		obj.myData.myTxn = trans_7;
		trans_7.isRunning = isRunning_8;
		header_4.element = ele_246;
		header_4.next = next_245;
		header_4.previous = prev_244;
		next_245.element = ele_256;
		next_245.next = header_4;
		next_245.previous = header_247;
		ele_256.myData = myData1_254;
		myData1_254.myBackup = myBackup_248;
		//System.out.println(Utilities.repOK(obj));
		obj.rollbackTransaction();
	}

}

