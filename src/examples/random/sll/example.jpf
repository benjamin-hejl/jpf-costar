@include=../../config/costar.jpf

target=random.sll.Input

concolic.method.isContainPrime=random.sll.Input.isContainPrime(root:Lrandom/sll/Node;)
concolic.method.isContainPrime.config=all_fields_symbolic

concolic.method.withAbs=random.sll.Input.withAbs(root:Lrandom/sll/Node;)
concolic.method.withAbs.config=all_fields_symbolic

concolic.method.withAcos=random.sll.Input.withAcos(root:Lrandom/sll/Node;)
concolic.method.withAcos.config=all_fields_symbolic

concolic.method.withAsin=random.sll.Input.withAsin(root:Lrandom/sll/Node;)
concolic.method.withAsin.config=all_fields_symbolic

concolic.method.withAtan=random.sll.Input.withAtan(root:Lrandom/sll/Node;)
concolic.method.withAtan.config=all_fields_symbolic

concolic.method.withCbrt=random.sll.Input.withCbrt(root:Lrandom/sll/Node;)
concolic.method.withCbrt.config=all_fields_symbolic

concolic.method.withCeil=random.sll.Input.withCeil(root:Lrandom/sll/Node;)
concolic.method.withCeil.config=all_fields_symbolic

concolic.method.withCos=random.sll.Input.withCos(root:Lrandom/sll/Node;)
concolic.method.withCos.config=all_fields_symbolic

concolic.method.withCosh=random.sll.Input.withCosh(root:Lrandom/sll/Node;)
concolic.method.withCosh.config=all_fields_symbolic

concolic.method.withDecrementExact=random.sll.Input.withDecrementExact(root:Lrandom/sll/Node;)
concolic.method.withDecrementExact.config=all_fields_symbolic

concolic.method.withExp=random.sll.Input.withExp(root:Lrandom/sll/Node;)
concolic.method.withExp.config=all_fields_symbolic

concolic.method.withExpm1=random.sll.Input.withExpm1(root:Lrandom/sll/Node;)
concolic.method.withExpm1.config=all_fields_symbolic

concolic.method.withFloor=random.sll.Input.withFloor(root:Lrandom/sll/Node;)
concolic.method.withFloor.config=all_fields_symbolic

concolic.method.withGetExponent=random.sll.Input.withGetExponent(root:Lrandom/sll/Node;)
concolic.method.withGetExponent.config=all_fields_symbolic

concolic.method.withIncrementExact=random.sll.Input.withIncrementExact(root:Lrandom/sll/Node;)
concolic.method.withIncrementExact.config=all_fields_symbolic

concolic.method.withLog=random.sll.Input.withLog(root:Lrandom/sll/Node;)
concolic.method.withLog.config=all_fields_symbolic

concolic.method.withLog10=random.sll.Input.withLog10(root:Lrandom/sll/Node;)
concolic.method.withLog10.config=all_fields_symbolic

concolic.method.withLog1p=random.sll.Input.withLog1p(root:Lrandom/sll/Node;)
concolic.method.withLog1p.config=all_fields_symbolic

concolic.method.withNegateExact=random.sll.Input.withNegateExact(root:Lrandom/sll/Node;)
concolic.method.withNegateExact.config=all_fields_symbolic

concolic.method.withNextDown=random.sll.Input.withNextDown(root:Lrandom/sll/Node;)
concolic.method.withNextDown.config=all_fields_symbolic

concolic.method.withNextUp=random.sll.Input.withNextUp(root:Lrandom/sll/Node;)
concolic.method.withNextUp.config=all_fields_symbolic

concolic.method.withRint=random.sll.Input.withRint(root:Lrandom/sll/Node;)
concolic.method.withRint.config=all_fields_symbolic

concolic.method.withRound=random.sll.Input.withRound(root:Lrandom/sll/Node;)
concolic.method.withRound.config=all_fields_symbolic

concolic.method.withSignum=random.sll.Input.withSignum(root:Lrandom/sll/Node;)
concolic.method.withSignum.config=all_fields_symbolic

concolic.method.withSin=random.sll.Input.withSin(root:Lrandom/sll/Node;)
concolic.method.withSin.config=all_fields_symbolic

concolic.method.withSinh=random.sll.Input.withSinh(root:Lrandom/sll/Node;)
concolic.method.withSinh.config=all_fields_symbolic

concolic.method.withSqrt=random.sll.Input.withSqrt(root:Lrandom/sll/Node;)
concolic.method.withSqrt.config=all_fields_symbolic

concolic.method.withTan=random.sll.Input.withTan(root:Lrandom/sll/Node;)
concolic.method.withTan.config=all_fields_symbolic

concolic.method.withTanh=random.sll.Input.withTanh(root:Lrandom/sll/Node;)
concolic.method.withTanh.config=all_fields_symbolic

concolic.method.withToDegrees=random.sll.Input.withToDegrees(root:Lrandom/sll/Node;)
concolic.method.withToDegrees.config=all_fields_symbolic

concolic.method.withToIntExact=random.sll.Input.withToIntExact(root:Lrandom/sll/Node;)
concolic.method.withToIntExact.config=all_fields_symbolic

concolic.method.withToRadians=random.sll.Input.withToRadians(root:Lrandom/sll/Node;)
concolic.method.withToRadians.config=all_fields_symbolic

concolic.method.withUlp=random.sll.Input.withUlp(root:Lrandom/sll/Node;)
concolic.method.withUlp.config=all_fields_symbolic

star.test_path=${test.path}/random/sll
star.test_package=random.sll
