@include=../star.jpf

target=star.tsafe.Driver

costar.data=data tsafe_TrajectorySynthesizer {tsafe_SimpleCalculator calc; tsafe_EngineParameters params};data tsafe_SimpleCalculator {double minLat; double minLon};data tsafe_EngineParameters {boolean cmLateralWeightOn; boolean cmVerticalWeightOn; boolean cmAngularWeightOn; boolean cmSpeedWeightOn; double cmLateralThreshold; double cmVerticalThreshold; double cmAngularThreshold; double cmSpeedThreshold; double cmResidualThreshold; double tsTimeHorizon};data tsafe_RouteTrack{double lat; double lon; double alt; double speed; double heading; double mTime; tsafe_Fix prevFix; tsafe_Fix nextFix};data tsafe_Fix {double lat; double lon; void id};data tsafe_LinkedList {void modCount; tsafe_LinkedList__Entry header; int size};data tsafe_LinkedList__Entry {tsafe_Fix element; tsafe_LinkedList__Entry next; tsafe_LinkedList__Entry previous};data tsafe_Route {tsafe_LinkedList fixes};data tsafe_Point2D {double lat; double lon};data tsafe_PointXY {double x; double y};data tsafe_Point4D {double lat; double lon; double alt; double tim};data tsafe_Trajectory {tsafe_LinkedList points}

costar.predicate.file=${jpf-costar}/src/examples/star/tsafe/tsr3.pred
  
star.test_path=${test.path}/tsafe
star.test_package=tsafe

concolic.method.TS_R_3=tsafe.Driver_TS_R.TS_R_3(trajSynth:tsafe.TrajectorySynthesizer,track:tsafe.RouteTrack,route:tsafe.Route)
concolic.method.TS_R_3.config=all_fields_symbolic